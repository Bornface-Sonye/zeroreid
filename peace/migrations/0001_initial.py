# Generated by Django 4.2.7 on 2024-04-04 08:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('ob_number', models.CharField(help_text='Enter OB Number', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('case_description', models.CharField(help_text='Enter Case Description', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Constituency',
            fields=[
                ('constituency_id', models.AutoField(primary_key=True, serialize=False)),
                ('constituency_name', models.CharField(help_text='Enter a valid Constituency Name', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('county_id', models.AutoField(primary_key=True, serialize=False)),
                ('county_name', models.CharField(help_text='Enter a valid County Name', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(help_text='Enter a valid Location Name', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Police_Officer',
            fields=[
                ('badge_number', models.CharField(help_text='Enter a valid Badge Number', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('email_address', models.EmailField(help_text='Enter a valid email address', max_length=200, unique=True)),
                ('password_hash', models.CharField(help_text='Enter a valid password', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Suspect',
            fields=[
                ('national_id_no', models.CharField(help_text='Enter a Suspect National ID No', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('suspect_name', models.CharField(default=' ', help_text='Enter Full Suspect Name', max_length=255)),
                ('gender', models.CharField(help_text='Enter Suspect Gender', max_length=10)),
                ('age', models.IntegerField(help_text='Enter Suspect Age')),
            ],
        ),
        migrations.CreateModel(
            name='Ward',
            fields=[
                ('ward_id', models.AutoField(primary_key=True, serialize=False)),
                ('ward_name', models.CharField(help_text='Enter a valid Ward Name', max_length=255, unique=True)),
                ('constituency_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peace.constituency')),
            ],
        ),
        migrations.CreateModel(
            name='Sub_Location',
            fields=[
                ('sub_location_id', models.AutoField(primary_key=True, serialize=False)),
                ('sub_location_name', models.CharField(help_text='Enter a valid Sub Location Name', max_length=255, unique=True)),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peace.location')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('response_id', models.AutoField(help_text='Enter a valid testification id', primary_key=True, serialize=False)),
                ('serial_number', models.CharField(blank=True, help_text='Auto-generated serial number', max_length=8, unique=True)),
                ('date_recorded', models.DateTimeField(auto_now_add=True, help_text='Date of submission')),
                ('trace', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='Any strong Trace of Suspect in Crime Scene?', max_length=3)),
                ('recidivist', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], help_text='Involved in similar case?', max_length=3)),
                ('question1', models.CharField(default='', help_text='Can you describe what happened on the incident day providing as many details as possible', max_length=250)),
                ('question2', models.CharField(default='', help_text='Can you think of any reason why someone would lie about this incident ? If yes, explain.', max_length=250)),
                ('question3', models.CharField(default='', help_text='Are you aware of any other complaints made by the accuser ? If yes, State.', max_length=250)),
                ('query1', models.CharField(default='', help_text="Provide detailed description of the incident day's events.", max_length=250)),
                ('query2', models.CharField(default='', help_text='Any motive for dishonesty about the incident? Please elaborate if applicable.', max_length=250)),
                ('query3', models.CharField(default='', help_text='Have you heard of any additional complaints filed by the accuser? If so, specify.', max_length=250)),
                ('national_id_no', models.ForeignKey(help_text='Enter a valid Suspect Identifier', on_delete=django.db.models.deletion.CASCADE, to='peace.suspect')),
                ('ob_number', models.ForeignKey(help_text='Enter a valid OB Number', on_delete=django.db.models.deletion.CASCADE, to='peace.case')),
            ],
        ),
        migrations.CreateModel(
            name='Police_Station',
            fields=[
                ('police_station_id', models.AutoField(primary_key=True, serialize=False)),
                ('police_station_name', models.CharField(help_text='Enter a Police Station Name', max_length=255, unique=True)),
                ('sub_location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peace.sub_location')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=' ', max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('username', models.ForeignKey(default=' ', on_delete=django.db.models.deletion.CASCADE, to='peace.police_officer')),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='ward_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peace.ward'),
        ),
        migrations.AddField(
            model_name='constituency',
            name='county_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peace.county'),
        ),
        migrations.AddField(
            model_name='case',
            name='badge_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peace.police_officer'),
        ),
        migrations.AddField(
            model_name='case',
            name='national_id_no',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peace.suspect'),
        ),
        migrations.CreateModel(
            name='Badge_Number',
            fields=[
                ('badge_number_id', models.AutoField(primary_key=True, serialize=False)),
                ('badge_number', models.CharField(help_text='Enter a valid Badge Number', max_length=255, unique=True)),
                ('first_name', models.CharField(help_text='Enter a valid first name', max_length=200)),
                ('last_name', models.CharField(help_text='Enter a valid last name', max_length=200)),
                ('police_station_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='peace.police_station')),
            ],
        ),
    ]
